Index: Infrastructure/DataContext/MovieShopDbContext.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Metadata.Builders;\nusing System;\nusing System.Collections.Generic;\nusing System.Text;\nusing ApplicationCore.Entities;\n\nnamespace Infrastructure\n{\n    public class MovieShopDbContext : DbContext\n    {\n        public MovieShopDbContext(DbContextOptions<MovieShopDbContext> options) : base(options)\n        {\n            \n        }\n        protected override void OnModelCreating(ModelBuilder modelBuilder)\n        {\n           \n            modelBuilder.Entity<Cast>(ConfigureCast);\n            modelBuilder.Entity<MovieCast>(ConfigureMovieCast);\n            modelBuilder.Entity<MovieCrew>(ConfigureMovieCrew);\n            modelBuilder.Entity<MovieGenre>(ConfigureMovieGenre);\n            modelBuilder.Entity<Genre>(ConfigureGenre);\n            modelBuilder.Entity<Crew>(ConfigureCrew);\n            modelBuilder.Entity<Movie>(ConfigureMovie);\n            modelBuilder.Entity<Review>(ConfigureReview);\n            modelBuilder.Entity<UserRole>(ConfigureUserRole);\n            modelBuilder.Entity<User>(ConfigureUser);\n        }\n\n      \n        public DbSet<Genre> Genre { get; set; }\n        public DbSet<Trailer> Trailer { get; set; }\n        public DbSet<Cast> Cast { get; set; }\n        public DbSet<Crew> Crew { get; set; }\n        //Table name will come from DbSet Property name\n        public DbSet<Role> Role { get; set; }\n\n        public DbSet<Purchase> Purchase { get; set; }\n\n        //2. using Fluent API\n        public DbSet<Movie> Movie { get; set; }\n        public DbSet<User> User { get; set; }\n        public DbSet<MovieCast> MovieCast { get; set; }\n        public DbSet<MovieGenre> MovieGenre { get; set; }\n        public DbSet<MovieCrew> MovieCrew { get; set; }\n\n        private void ConfigureUserRole(EntityTypeBuilder<UserRole> modelBuilder)\n        {\n            modelBuilder.HasKey(ur => new { ur.UserId,ur.RoleId });\n\n            modelBuilder.HasOne(ur => ur.User)\n                .WithMany(u => u.UserRoles)\n                .HasForeignKey(ur => ur.UserId);\n\n            modelBuilder.HasOne(ur => ur.Role)\n                .WithMany(r => r.UserRoles)\n                .HasForeignKey(ur => ur.RoleId);\n            \n        }\n        private void ConfigureMovieCrew(EntityTypeBuilder<MovieCrew> modelBuilder)\n        {\n            modelBuilder.HasKey(mc => new { mc.MovieId, mc.CrewId });\n\n            modelBuilder.HasOne(mc => mc.Crew)\n                .WithMany(c => c.MovieCrews)\n                .HasForeignKey(mc => mc.CrewId);\n\n            modelBuilder.HasOne(mc => mc.Movie)\n                .WithMany(m => m.MovieCrews)\n                .HasForeignKey(mc => mc.MovieId);\n\n            modelBuilder.Property(mc => mc.Department).HasMaxLength(128);\n            modelBuilder.Property(mc => mc.Job).HasMaxLength(128);\n        }\n        private void ConfigureMovieGenre(EntityTypeBuilder<MovieGenre> modelBuilder)\n        {\n            modelBuilder.HasKey(mc => new { mc.MovieId, mc.GenreId });\n\n            modelBuilder.HasOne(mc => mc.Genre)\n                .WithMany(c => c.MovieGenres)\n                .HasForeignKey(mc => mc.GenreId);\n\n            modelBuilder.HasOne(mc => mc.Movie)\n                .WithMany(m => m.MovieGenres)\n                .HasForeignKey(mc => mc.MovieId);\n        }\n        private void ConfigureMovieCast(EntityTypeBuilder<MovieCast> modelBuilder)\n        {\n            modelBuilder.HasKey(mc => new { mc.MovieId, mc.CastId});\n\n            modelBuilder.HasOne(mc => mc.Cast)\n                .WithMany(c => c.MovieCasts)\n                .HasForeignKey(mc => mc.CastId);\n\n            modelBuilder.HasOne(mc => mc.Movie)\n                .WithMany(m => m.MovieCasts)\n                .HasForeignKey(mc => mc.MovieId);\n\n            modelBuilder.Property(mc => mc.Character).HasMaxLength(450);\n        }\n        private void ConfigureCast(EntityTypeBuilder<Cast> builder)\n        {\n            // specify your Fluent API rules.\n            builder.ToTable(\"Cast\");\n            builder.HasKey(t => t.Id);\n            builder.Property(t => t.Name).HasMaxLength(128);\n            builder.Property(t => t.ProfilePath).HasMaxLength(2084);\n            builder.Ignore(m => m.Character);\n        }\n        private void ConfigureGenre(EntityTypeBuilder<Genre> builder)\n        {\n            // specify your Fluent API rules.\n            builder.ToTable(\"Genre\");\n            builder.HasKey(t => t.Id);\n            builder.Property(t => t.Name).HasMaxLength(64);\n        }\n        private void ConfigureCrew(EntityTypeBuilder<Crew> builder)\n        {\n            // specify your Fluent API rules.\n            builder.ToTable(\"Crew\");\n            builder.HasKey(t => t.Id);\n            builder.Property(t => t.Name).HasMaxLength(128);\n            builder.Property(t => t.ProfilePath).HasMaxLength(2084);\n        }\n        private void ConfigureMovie(EntityTypeBuilder<Movie> builder)\n        {\n            // specify your Fluent API rules.\n            builder.ToTable(\"Movie\");\n            //using ValueGeneratedOnAdd check if not using it\n            builder.HasKey(m => m.Id);\n            builder.Property(m => m.Id).ValueGeneratedOnAdd();\n\n\n            builder.Property(m => m.Title).HasMaxLength(256);\n            builder.Property(m => m.Tagline).HasMaxLength(512);\n            builder.Property(m => m.Budget).HasColumnType(\"decimal(18, 2)\").HasDefaultValue(9.9m);\n            builder.Property(m => m.Revenue).HasColumnType(\"decimal(18, 2)\");\n            builder.Property(m => m.Price).HasColumnType(\"decimal(5, 2)\").HasDefaultValue(9.9m);\n            builder.Property(m => m.ImdbUrl).HasMaxLength(2084);\n            builder.Property(m => m.TmdbUrl).HasMaxLength(2084);\n            builder.Property(m => m.PosterUrl).HasMaxLength(2084);\n            builder.Property(m => m.BackdropUrl).HasMaxLength(2084);\n            builder.Property(m => m.OriginalLanguage).HasMaxLength(64);\n            builder.Property(m => m.ReleaseDate).HasColumnType(\"datetime2(7)\");\n\n            //define Foreign Values\n            builder.HasMany(m => m.Trailers).WithOne(t => t.Movie);\n            builder.HasMany(m => m.Purchases).WithOne(p => p.Movie);\n            builder.HasMany(m => m.Favorites).WithOne(p => p.Movie);\n\n            builder.Ignore(m => m.Rating);\n          \n\n        }\n        private void ConfigureReview(EntityTypeBuilder<Review> modelBuilder)\n        {\n            // specify your Fluent API rules.\n            modelBuilder.ToTable(\"Review\");\n            modelBuilder.HasKey(mc => new { mc.MovieId, mc.UserId });\n            modelBuilder.Property(t => t.Rating).HasColumnType(\"decimal(3,2)\").HasDefaultValue(3.0d);\n            \n        }\n\n        private void ConfigureUser(EntityTypeBuilder<User> modelBuilder)\n        {\n            // specify your Fluent API rules.\n            modelBuilder.ToTable(\"User\");\n            modelBuilder.HasKey(mc => mc.Id );\n            modelBuilder.Property(t => t.FirstName).HasMaxLength(128);\n            modelBuilder.Property(t => t.LastName).HasMaxLength(128);\n            modelBuilder.Property(t => t.Email).HasMaxLength(256);\n            modelBuilder.Property(t => t.HashedPassword).HasMaxLength(1024);\n            modelBuilder.Property(t => t.Salt).HasMaxLength(1024);\n            modelBuilder.Property(t => t.PhoneNumber).HasMaxLength(16);\n            modelBuilder.HasMany(m => m.Reviews).WithOne(t => t.User);\n            modelBuilder.HasMany(m => m.Purchases).WithOne(p => p.User);\n            modelBuilder.HasMany(m => m.Favorites).WithOne(p => p.User);\n            modelBuilder.HasMany(m => m.UserRoles).WithOne(p => p.User);\n       \n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Infrastructure/DataContext/MovieShopDbContext.cs b/Infrastructure/DataContext/MovieShopDbContext.cs
--- a/Infrastructure/DataContext/MovieShopDbContext.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/Infrastructure/DataContext/MovieShopDbContext.cs	(date 1623786361615)
@@ -5,7 +5,7 @@
 using System.Text;
 using ApplicationCore.Entities;
 
-namespace Infrastructure
+namespace Infrastructure.DataContext
 {
     public class MovieShopDbContext : DbContext
     {
Index: MovieShopApp.MVC/Controllers/AdminController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Microsoft.AspNetCore.Http;\nusing Microsoft.AspNetCore.Mvc;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing ApplicationCore.ServiceInterfaces;\nusing ApplicationCore.Models.Request;\nusing AutoMapper;\n/*\n * Create AdminController for creating A Movie with Genres, \n * and it should have submit button that will post to AccounController/CreateMovie method, \n * Create a model for CreateMovie also\n */\n\nnamespace MovieShopApp.MVC.Controllers\n{\n    public class AdminController : Controller\n    {\n        private readonly IMovieService _movieService;\n        private readonly IGenreService _genreService;\n        \n        public AdminController(IMovieService movieService, IGenreService genreService)\n        {\n            _movieService = movieService;\n            _genreService = genreService;\n        }\n\n        // GET: AdminController\n        public async Task<ActionResult> Index()\n        {\n            var details = await _movieService.GetAllMovieModelList();\n            return View(details);\n        }\n        \n\n        // GET: AdminController/Details/5\n        public ActionResult Details(int id)\n        {\n            return View();\n        }\n\n        // GET: AdminController/CreateMovie\n        public async Task<IActionResult> CreateMovie()\n        {\n            \n\n            ViewBag.Genres = await _genreService.GetAssignedGenreModelAsync();\n            \n            return View();\n        }\n\n        // POST: AdminController/Create, string[] selectedCourses\n        [HttpPost]\n        [ValidateAntiForgeryToken]\n        public ActionResult CreateMovie( CreateMovieRequestModel createMovieRequestModel, string[] selectedGenere)\n        {\n            try\n            {\n                return RedirectToAction(nameof(Index));\n            }\n            catch\n            {\n                return View();\n            }\n        }\n\n        // GET: AdminController/Edit/5\n        public ActionResult Edit(int id)\n        {\n            return View();\n        }\n\n        // POST: AdminController/Edit/5\n        [HttpPost]\n        [ValidateAntiForgeryToken]\n        public ActionResult Edit(int id, IFormCollection collection)\n        {\n            try\n            {\n                return RedirectToAction(nameof(Index));\n            }\n            catch\n            {\n                return View();\n            }\n        }\n\n        // GET: AdminController/Delete/5\n        public ActionResult Delete(int id)\n        {\n            return View();\n        }\n\n        // POST: AdminController/Delete/5\n        [HttpPost]\n        [ValidateAntiForgeryToken]\n        public ActionResult Delete(int id, IFormCollection collection)\n        {\n            try\n            {\n                return RedirectToAction(nameof(Index));\n            }\n            catch\n            {\n                return View();\n            }\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MovieShopApp.MVC/Controllers/AdminController.cs b/MovieShopApp.MVC/Controllers/AdminController.cs
--- a/MovieShopApp.MVC/Controllers/AdminController.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/MovieShopApp.MVC/Controllers/AdminController.cs	(date 1623789874899)
@@ -33,13 +33,6 @@
             return View(details);
         }
         
-
-        // GET: AdminController/Details/5
-        public ActionResult Details(int id)
-        {
-            return View();
-        }
-
         // GET: AdminController/CreateMovie
         public async Task<IActionResult> CreateMovie()
         {
@@ -65,46 +58,7 @@
             }
         }
 
-        // GET: AdminController/Edit/5
-        public ActionResult Edit(int id)
-        {
-            return View();
-        }
-
-        // POST: AdminController/Edit/5
-        [HttpPost]
-        [ValidateAntiForgeryToken]
-        public ActionResult Edit(int id, IFormCollection collection)
-        {
-            try
-            {
-                return RedirectToAction(nameof(Index));
-            }
-            catch
-            {
-                return View();
-            }
-        }
-
-        // GET: AdminController/Delete/5
-        public ActionResult Delete(int id)
-        {
-            return View();
-        }
-
-        // POST: AdminController/Delete/5
-        [HttpPost]
-        [ValidateAntiForgeryToken]
-        public ActionResult Delete(int id, IFormCollection collection)
-        {
-            try
-            {
-                return RedirectToAction(nameof(Index));
-            }
-            catch
-            {
-                return View();
-            }
-        }
+      
+        
     }
 }
Index: MovieShopApp.MVC/Controllers/MovieController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Microsoft.AspNetCore.Http;\nusing Microsoft.AspNetCore.Mvc;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing ApplicationCore.ServiceInterfaces;\nnamespace MovieShopApp.MVC.Controllers\n{\n    public class MovieController : Controller\n    {\n        private readonly IMovieService _movieService;\n\n        public MovieController(IMovieService movieService)\n        {\n            _movieService = movieService;\n        }\n\n        // GET: MovieController\n        public async Task<ActionResult> Index()\n        {\n            var details = await _movieService.GetTopRevenueMovies();           \n            return View(details);\n        }\n\n        // GET: MovieController/Details/5\n        public async Task<ActionResult> Details(int id)\n        {\n            var model = await _movieService.GetMovieDetailsById(id);\n            return View(model);\n        }\n\n        // GET: MovieController/Create\n        public ActionResult Create()\n        {\n            return View();\n        }\n\n        // POST: MovieController/Create\n        [HttpPost]\n        [ValidateAntiForgeryToken]\n        public ActionResult Create(IFormCollection collection)\n        {\n            try\n            {\n                return RedirectToAction(nameof(Index));\n            }\n            catch\n            {\n                return View();\n            }\n        }\n\n        // GET: MovieController/Edit/5\n        public ActionResult Edit(int id)\n        {\n            return View();\n        }\n\n        // POST: MovieController/Edit/5\n        [HttpPost]\n        [ValidateAntiForgeryToken]\n        public ActionResult Edit(int id, IFormCollection collection)\n        {\n            try\n            {\n                return RedirectToAction(nameof(Index));\n            }\n            catch\n            {\n                return View();\n            }\n        }\n\n        // GET: MovieController/Delete/5\n        public ActionResult Delete(int id)\n        {\n            return View();\n        }\n\n        // POST: MovieController/Delete/5\n        [HttpPost]\n        [ValidateAntiForgeryToken]\n        public ActionResult Delete(int id, IFormCollection collection)\n        {\n            try\n            {\n                return RedirectToAction(nameof(Index));\n            }\n            catch\n            {\n                return View();\n            }\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MovieShopApp.MVC/Controllers/MovieController.cs b/MovieShopApp.MVC/Controllers/MovieController.cs
--- a/MovieShopApp.MVC/Controllers/MovieController.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/MovieShopApp.MVC/Controllers/MovieController.cs	(date 1623789874881)
@@ -30,67 +30,8 @@
             return View(model);
         }
 
-        // GET: MovieController/Create
-        public ActionResult Create()
-        {
-            return View();
-        }
-
-        // POST: MovieController/Create
-        [HttpPost]
-        [ValidateAntiForgeryToken]
-        public ActionResult Create(IFormCollection collection)
-        {
-            try
-            {
-                return RedirectToAction(nameof(Index));
-            }
-            catch
-            {
-                return View();
-            }
-        }
+  
 
-        // GET: MovieController/Edit/5
-        public ActionResult Edit(int id)
-        {
-            return View();
-        }
-
-        // POST: MovieController/Edit/5
-        [HttpPost]
-        [ValidateAntiForgeryToken]
-        public ActionResult Edit(int id, IFormCollection collection)
-        {
-            try
-            {
-                return RedirectToAction(nameof(Index));
-            }
-            catch
-            {
-                return View();
-            }
-        }
-
-        // GET: MovieController/Delete/5
-        public ActionResult Delete(int id)
-        {
-            return View();
-        }
-
-        // POST: MovieController/Delete/5
-        [HttpPost]
-        [ValidateAntiForgeryToken]
-        public ActionResult Delete(int id, IFormCollection collection)
-        {
-            try
-            {
-                return RedirectToAction(nameof(Index));
-            }
-            catch
-            {
-                return View();
-            }
-        }
+     
     }
 }
Index: MovieShopApp.API/Startup.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Infrastructure;\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Hosting;\nusing Microsoft.AspNetCore.HttpsPolicy;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.Hosting;\nusing Microsoft.Extensions.Logging;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing AutoMapper;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.OpenApi.Models;\nusing Infrastructure.Helpers;\nusing Microsoft.Extensions.DependencyInjection;\n\nnamespace MovieShopApp.API\n{\n    public class Startup\n    {\n        public Startup(IConfiguration configuration)\n        {\n            Configuration = configuration;\n        }\n\n        public IConfiguration Configuration { get; }\n\n        // This method gets called by the runtime. Use this method to add services to the container.\n        public void ConfigureServices(IServiceCollection services)\n        {\n            services.AddControllers();\n            services.AddSwaggerGen(c =>\n            {\n                c.SwaggerDoc(\"v1\", new OpenApiInfo { Title = \"MovieShop.API\", Version = \"v1\" });\n            });\n            services.AddDbContext<MovieShopDbContext>(options =>\n            {\n                options.UseSqlServer(Configuration.GetConnectionString(\"MovieShopDbConnection\"));\n                //Injecting SqlConnection string DbContext.             \n            });\n            services.AddAutoMapper(typeof(Startup), typeof(MovieShopMappingProfile));\n           \n            ConfigureDependencyInjection(services);\n       \n            services.AddHttpContextAccessor();\n        }\n\n        private void ConfigureDependencyInjection(IServiceCollection services)\n        {\n            services.AddRepositories();\n            services.AddServices();\n        }\n\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n        {\n            if (env.IsDevelopment())\n            {\n                app.UseDeveloperExceptionPage();\n                app.UseSwagger();\n                app.UseSwaggerUI(c => c.SwaggerEndpoint(\"/swagger/v1/swagger.json\", \"MovieShop.API v1\"));\n            }\n\n    \n            app.UseHttpsRedirection();\n\n            app.UseRouting();\n\n            app.UseAuthorization();\n\n            app.UseEndpoints(endpoints =>\n            {\n                endpoints.MapControllers();\n            });\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MovieShopApp.API/Startup.cs b/MovieShopApp.API/Startup.cs
--- a/MovieShopApp.API/Startup.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/MovieShopApp.API/Startup.cs	(date 1623789147305)
@@ -15,7 +15,7 @@
 using Microsoft.OpenApi.Models;
 using Infrastructure.Helpers;
 using Microsoft.Extensions.DependencyInjection;
-
+using Infrastructure.DataContext;
 namespace MovieShopApp.API
 {
     public class Startup
Index: MovieShopApp.MVC/appsettings.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \n  \"AllowedHosts\": \"*\",\n  \"ConnectionStrings\": {\n    \"MovieShopDbConnection\": \"Data Source=LAPTOP-S1RBCB08\\\\ANTRA;Initial Catalog=MovieShop;Integrated Security=True\"\n  },\n  \"Serilog\": {\n    \"WriteTo\": [\n      {\n        \"Name\": \"File\",\n        \"Args\": {\n          \"path\": \"ApplicationData\\\\LogFiles\\\\log.txt\",\n          \"rollingInterval\": \"Day\"\n        }\n      }\n    ]\n  }\n  }\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MovieShopApp.MVC/appsettings.json b/MovieShopApp.MVC/appsettings.json
--- a/MovieShopApp.MVC/appsettings.json	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/MovieShopApp.MVC/appsettings.json	(date 1623791627835)
@@ -2,7 +2,12 @@
   
   "AllowedHosts": "*",
   "ConnectionStrings": {
-    "MovieShopDbConnection": "Data Source=LAPTOP-S1RBCB08\\ANTRA;Initial Catalog=MovieShop;Integrated Security=True"
+
+
+
+    
+
+  "MovieShopDbConnection": "Server=localhost;User Id=SA;Password=Zsq121212!;Initial Catalog=MovieShop;Integrated Security=True;Trusted_Connection=False;"
   },
   "Serilog": {
     "WriteTo": [
Index: MovieShopApp.MVC/Startup.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Hosting;\nusing Microsoft.AspNetCore.HttpsPolicy;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Hosting;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Infrastructure.Services;\nusing ApplicationCore.RepositoryInterfaces;\nusing ApplicationCore.ServiceInterfaces;\nusing Infrastructure.Repositories;\nusing Infrastructure;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.SqlServer;\nusing Microsoft.AspNetCore.Authentication.Cookies;\nusing MovieShopApp.MVC.Middleware;\nusing Serilog;\nusing Infrastructure.Helpers;\nnamespace MovieShopApp.MVC\n{\n    public class Startup\n    {\n        public Startup(IConfiguration configuration)\n        {\n            Configuration = configuration;\n        }\n\n        public IConfiguration Configuration { get; }\n\n        // This method gets called by the runtime. Use this method to add services to the container.\n        public void ConfigureServices(IServiceCollection services)\n        {\n            services.AddControllersWithViews();\n            services.AddDbContext<MovieShopDbContext>(options =>\n                        options.UseSqlServer(Configuration\n                            .GetConnectionString(\"MovieShopDbConnection\")));\n            services.AddAutoMapper(typeof(Startup), typeof(MovieShopMappingProfile));\n            ConfigureDependencyInjection(services);\n            services.AddHttpContextAccessor();\n           \n            \n\n            services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)\n                .AddCookie(options =>\n                {\n                    options.Cookie.Name = \"MovieShopAuthCookie\";\n                    options.ExpireTimeSpan = TimeSpan.FromHours(2);\n                    options.LoginPath = \"/Account/Login\";\n                });\n           \n            var configuration = new ConfigurationBuilder().AddJsonFile(\"appsettings.json\") .Build();\n\n            Log.Logger = new LoggerConfiguration().ReadFrom.Configuration(configuration).CreateLogger();\n            services.AddSingleton(Log.Logger);\n\n\n\n        }\n\n        private void ConfigureDependencyInjection(IServiceCollection services)\n        {\n           // var connectionString = Configuration.GetValue<string>(\"AzureBlobStorage\");\n            // var containerName = Configuration.GetValue<string>(\"MovieShopBlobContainer\");\n            \n            services.AddRepositories();\n            services.AddServices();\n        }\n\n\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n        {\n            \n            if (env.IsDevelopment())\n            {\n                app.UseMovieShopExceptionMiddleware();\n            }\n            else\n            {\n                app.UseExceptionHandler(\"/Home/Error\");\n                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.\n                app.UseHsts();\n            }\n            app.UseHttpsRedirection();\n            app.UseStaticFiles();\n\n            app.UseRouting();\n            //app.UseSerilogRequestLogging();\n           \n            app.UseAuthentication();\n            app.UseAuthorization();\n            \n            app.UseLoggerMiddleware();\n           \n            app.UseEndpoints(endpoints =>\n            {\n                endpoints.MapControllerRoute(\n                    name: \"default\",\n                    pattern: \"{controller=Home}/{action=Index}/{id?}\");\n            });\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MovieShopApp.MVC/Startup.cs b/MovieShopApp.MVC/Startup.cs
--- a/MovieShopApp.MVC/Startup.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/MovieShopApp.MVC/Startup.cs	(date 1623789981000)
@@ -12,7 +12,7 @@
 using ApplicationCore.RepositoryInterfaces;
 using ApplicationCore.ServiceInterfaces;
 using Infrastructure.Repositories;
-using Infrastructure;
+using Infrastructure.DataContext;
 using Microsoft.EntityFrameworkCore;
 using Microsoft.EntityFrameworkCore.SqlServer;
 using Microsoft.AspNetCore.Authentication.Cookies;
@@ -76,7 +76,8 @@
             
             if (env.IsDevelopment())
             {
-                app.UseMovieShopExceptionMiddleware();
+                //app.UseMovieShopExceptionMiddleware();
+                app.UseDeveloperExceptionPage();
             }
             else
             {
Index: Infrastructure/Migrations/MovieShopDbContextModelSnapshot.cs
===================================================================
diff --git a/Infrastructure/Migrations/MovieShopDbContextModelSnapshot.cs b/Infrastructure/Migrations/MovieShopDbContextModelSnapshot.cs
deleted file mode 100644
--- a/Infrastructure/Migrations/MovieShopDbContextModelSnapshot.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ /dev/null	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
@@ -1,600 +0,0 @@
-// <auto-generated />
-using System;
-using Infrastructure;
-using Microsoft.EntityFrameworkCore;
-using Microsoft.EntityFrameworkCore.Infrastructure;
-using Microsoft.EntityFrameworkCore.Metadata;
-using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
-
-namespace Infrastructure.Migrations
-{
-    [DbContext(typeof(MovieShopDbContext))]
-    partial class MovieShopDbContextModelSnapshot : ModelSnapshot
-    {
-        protected override void BuildModel(ModelBuilder modelBuilder)
-        {
-#pragma warning disable 612, 618
-            modelBuilder
-                .HasAnnotation("Relational:MaxIdentifierLength", 128)
-                .HasAnnotation("ProductVersion", "5.0.7")
-                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-            modelBuilder.Entity("ApplicationCore.Entities.Cast", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Gender")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("ProfilePath")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("TmdbUrl")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Cast");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Crew", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Gender")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("ProfilePath")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("TmdbUrl")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Crew");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Favorite", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("MovieId");
-
-                    b.HasIndex("UserId");
-
-                    b.ToTable("Favorite");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Genre", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(64)
-                        .HasColumnType("nvarchar(64)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Genre");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Movie", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("BackdropUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<decimal?>("Budget")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("decimal(18,2)")
-                        .HasDefaultValue(9.9m);
-
-                    b.Property<string>("CreatedBy")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<DateTime?>("CreatedDate")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("ImdbUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("OriginalLanguage")
-                        .HasMaxLength(64)
-                        .HasColumnType("nvarchar(64)");
-
-                    b.Property<string>("Overview")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("PosterUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<decimal?>("Price")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("decimal(5,2)")
-                        .HasDefaultValue(9.9m);
-
-                    b.Property<DateTime?>("ReleaseDate")
-                        .HasColumnType("datetime2(7)");
-
-                    b.Property<decimal?>("Revenue")
-                        .HasColumnType("decimal(18,2)");
-
-                    b.Property<int?>("RunTime")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Tagline")
-                        .HasMaxLength(512)
-                        .HasColumnType("nvarchar(512)");
-
-                    b.Property<string>("Title")
-                        .HasMaxLength(256)
-                        .HasColumnType("nvarchar(256)");
-
-                    b.Property<string>("TmdbUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("UpdatedBy")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<DateTime?>("UpdatedDate")
-                        .HasColumnType("datetime2");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCast", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("CastId")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Character")
-                        .HasMaxLength(450)
-                        .HasColumnType("nvarchar(450)");
-
-                    b.HasKey("MovieId", "CastId");
-
-                    b.HasIndex("CastId");
-
-                    b.ToTable("MovieCast");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCrew", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("CrewId")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Department")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("Job")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.HasKey("MovieId", "CrewId");
-
-                    b.HasIndex("CrewId");
-
-                    b.ToTable("MovieCrew");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieGenre", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("GenreId")
-                        .HasColumnType("int");
-
-                    b.HasKey("MovieId", "GenreId");
-
-                    b.HasIndex("GenreId");
-
-                    b.ToTable("MovieGenre");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Purchase", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<DateTime>("PurchaseDateTime")
-                        .HasColumnType("datetime2");
-
-                    b.Property<Guid>("PurchaseNumber")
-                        .HasColumnType("uniqueidentifier");
-
-                    b.Property<decimal>("TotalPrice")
-                        .HasColumnType("decimal(18,2)")
-                        .HasColumnName("TotalPrice");
-
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("MovieId");
-
-                    b.HasIndex("UserId");
-
-                    b.ToTable("Purchase");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Review", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.Property<decimal>("Rating")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("decimal(3,2)")
-                        .HasDefaultValue(3m);
-
-                    b.Property<string>("ReviewText")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("MovieId", "UserId");
-
-                    b.HasIndex("UserId");
-
-                    b.ToTable("Review");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Role", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(20)
-                        .HasColumnType("nvarchar(20)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Role");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Trailer", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Name")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("TrailerUrl")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("MovieId");
-
-                    b.ToTable("Trailer");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int?>("AccessFailedCount")
-                        .HasColumnType("int");
-
-                    b.Property<DateTime?>("DateOfBirth")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("Email")
-                        .HasMaxLength(256)
-                        .HasColumnType("nvarchar(256)");
-
-                    b.Property<string>("FirstName")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("HashedPassword")
-                        .HasMaxLength(1024)
-                        .HasColumnType("nvarchar(1024)");
-
-                    b.Property<bool?>("IsLocked")
-                        .HasColumnType("bit");
-
-                    b.Property<DateTime?>("LastLoginDateTime")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("LastName")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<DateTime?>("LockoutEndDate")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("PhoneNumber")
-                        .HasMaxLength(16)
-                        .HasColumnType("nvarchar(16)");
-
-                    b.Property<string>("Salt")
-                        .HasMaxLength(1024)
-                        .HasColumnType("nvarchar(1024)");
-
-                    b.Property<bool?>("TwoFactorEnabled")
-                        .HasColumnType("bit");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.UserRole", b =>
-                {
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("RoleId")
-                        .HasColumnType("int");
-
-                    b.HasKey("UserId", "RoleId");
-
-                    b.HasIndex("RoleId");
-
-                    b.ToTable("UserRole");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Favorite", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Favorites")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("Favorites")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCast", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Cast", "Cast")
-                        .WithMany("MovieCasts")
-                        .HasForeignKey("CastId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("MovieCasts")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Cast");
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCrew", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Crew", "Crew")
-                        .WithMany("MovieCrews")
-                        .HasForeignKey("CrewId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("MovieCrews")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Crew");
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieGenre", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Genre", "Genre")
-                        .WithMany("MovieGenres")
-                        .HasForeignKey("GenreId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("MovieGenres")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Genre");
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Purchase", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Purchases")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("Purchases")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Review", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Reviews")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("Reviews")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Trailer", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Trailers")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.UserRole", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Role", "Role")
-                        .WithMany("UserRoles")
-                        .HasForeignKey("RoleId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("UserRoles")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Role");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Cast", b =>
-                {
-                    b.Navigation("MovieCasts");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Crew", b =>
-                {
-                    b.Navigation("MovieCrews");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Genre", b =>
-                {
-                    b.Navigation("MovieGenres");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Movie", b =>
-                {
-                    b.Navigation("Favorites");
-
-                    b.Navigation("MovieCasts");
-
-                    b.Navigation("MovieCrews");
-
-                    b.Navigation("MovieGenres");
-
-                    b.Navigation("Purchases");
-
-                    b.Navigation("Reviews");
-
-                    b.Navigation("Trailers");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Role", b =>
-                {
-                    b.Navigation("UserRoles");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
-                {
-                    b.Navigation("Favorites");
-
-                    b.Navigation("Purchases");
-
-                    b.Navigation("Reviews");
-
-                    b.Navigation("UserRoles");
-                });
-#pragma warning restore 612, 618
-        }
-    }
-}
Index: Infrastructure/Migrations/20210609214456_init.Designer.cs
===================================================================
diff --git a/Infrastructure/Migrations/20210609214456_init.Designer.cs b/Infrastructure/Migrations/20210609214456_init.Designer.cs
deleted file mode 100644
--- a/Infrastructure/Migrations/20210609214456_init.Designer.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ /dev/null	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
@@ -1,602 +0,0 @@
-// <auto-generated />
-using System;
-using Infrastructure;
-using Microsoft.EntityFrameworkCore;
-using Microsoft.EntityFrameworkCore.Infrastructure;
-using Microsoft.EntityFrameworkCore.Metadata;
-using Microsoft.EntityFrameworkCore.Migrations;
-using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
-
-namespace Infrastructure.Migrations
-{
-    [DbContext(typeof(MovieShopDbContext))]
-    [Migration("20210609214456_init")]
-    partial class init
-    {
-        protected override void BuildTargetModel(ModelBuilder modelBuilder)
-        {
-#pragma warning disable 612, 618
-            modelBuilder
-                .HasAnnotation("Relational:MaxIdentifierLength", 128)
-                .HasAnnotation("ProductVersion", "5.0.7")
-                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-            modelBuilder.Entity("ApplicationCore.Entities.Cast", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Gender")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("ProfilePath")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("TmdbUrl")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Cast");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Crew", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Gender")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("ProfilePath")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("TmdbUrl")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Crew");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Favorite", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("MovieId");
-
-                    b.HasIndex("UserId");
-
-                    b.ToTable("Favorite");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Genre", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(64)
-                        .HasColumnType("nvarchar(64)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Genre");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Movie", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("BackdropUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<decimal?>("Budget")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("decimal(18,2)")
-                        .HasDefaultValue(9.9m);
-
-                    b.Property<string>("CreatedBy")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<DateTime?>("CreatedDate")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("ImdbUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("OriginalLanguage")
-                        .HasMaxLength(64)
-                        .HasColumnType("nvarchar(64)");
-
-                    b.Property<string>("Overview")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("PosterUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<decimal?>("Price")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("decimal(5,2)")
-                        .HasDefaultValue(9.9m);
-
-                    b.Property<DateTime?>("ReleaseDate")
-                        .HasColumnType("datetime2(7)");
-
-                    b.Property<decimal?>("Revenue")
-                        .HasColumnType("decimal(18,2)");
-
-                    b.Property<int?>("RunTime")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Tagline")
-                        .HasMaxLength(512)
-                        .HasColumnType("nvarchar(512)");
-
-                    b.Property<string>("Title")
-                        .HasMaxLength(256)
-                        .HasColumnType("nvarchar(256)");
-
-                    b.Property<string>("TmdbUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("UpdatedBy")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<DateTime?>("UpdatedDate")
-                        .HasColumnType("datetime2");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCast", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("CastId")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Character")
-                        .HasMaxLength(450)
-                        .HasColumnType("nvarchar(450)");
-
-                    b.HasKey("MovieId", "CastId");
-
-                    b.HasIndex("CastId");
-
-                    b.ToTable("MovieCast");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCrew", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("CrewId")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Department")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("Job")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.HasKey("MovieId", "CrewId");
-
-                    b.HasIndex("CrewId");
-
-                    b.ToTable("MovieCrew");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieGenre", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("GenreId")
-                        .HasColumnType("int");
-
-                    b.HasKey("MovieId", "GenreId");
-
-                    b.HasIndex("GenreId");
-
-                    b.ToTable("MovieGenre");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Purchase", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<DateTime>("PurchaseDateTime")
-                        .HasColumnType("datetime2");
-
-                    b.Property<Guid>("PurchaseNumber")
-                        .HasColumnType("uniqueidentifier");
-
-                    b.Property<decimal>("TotalPrice")
-                        .HasColumnType("decimal(18,2)")
-                        .HasColumnName("TotalPrice");
-
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("MovieId");
-
-                    b.HasIndex("UserId");
-
-                    b.ToTable("Purchase");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Review", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.Property<decimal>("Rating")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("decimal(3,2)")
-                        .HasDefaultValue(3m);
-
-                    b.Property<string>("ReviewText")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("MovieId", "UserId");
-
-                    b.HasIndex("UserId");
-
-                    b.ToTable("Review");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Role", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(20)
-                        .HasColumnType("nvarchar(20)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Role");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Trailer", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Name")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("TrailerUrl")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("MovieId");
-
-                    b.ToTable("Trailer");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int?>("AccessFailedCount")
-                        .HasColumnType("int");
-
-                    b.Property<DateTime?>("DateOfBirth")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("Email")
-                        .HasMaxLength(256)
-                        .HasColumnType("nvarchar(256)");
-
-                    b.Property<string>("FirstName")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("HashedPassword")
-                        .HasMaxLength(1024)
-                        .HasColumnType("nvarchar(1024)");
-
-                    b.Property<bool?>("IsLocked")
-                        .HasColumnType("bit");
-
-                    b.Property<DateTime?>("LastLoginDateTime")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("LastName")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<DateTime?>("LockoutEndDate")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("PhoneNumber")
-                        .HasMaxLength(16)
-                        .HasColumnType("nvarchar(16)");
-
-                    b.Property<string>("Salt")
-                        .HasMaxLength(1024)
-                        .HasColumnType("nvarchar(1024)");
-
-                    b.Property<bool?>("TwoFactorEnabled")
-                        .HasColumnType("bit");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.UserRole", b =>
-                {
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("RoleId")
-                        .HasColumnType("int");
-
-                    b.HasKey("UserId", "RoleId");
-
-                    b.HasIndex("RoleId");
-
-                    b.ToTable("UserRole");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Favorite", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Favorites")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("Favorites")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCast", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Cast", "Cast")
-                        .WithMany("MovieCasts")
-                        .HasForeignKey("CastId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("MovieCasts")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Cast");
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCrew", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Crew", "Crew")
-                        .WithMany("MovieCrews")
-                        .HasForeignKey("CrewId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("MovieCrews")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Crew");
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieGenre", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Genre", "Genre")
-                        .WithMany("MovieGenres")
-                        .HasForeignKey("GenreId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("MovieGenres")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Genre");
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Purchase", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Purchases")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("Purchases")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Review", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Reviews")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("Reviews")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Trailer", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Trailers")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.UserRole", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Role", "Role")
-                        .WithMany("UserRoles")
-                        .HasForeignKey("RoleId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("UserRoles")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Role");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Cast", b =>
-                {
-                    b.Navigation("MovieCasts");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Crew", b =>
-                {
-                    b.Navigation("MovieCrews");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Genre", b =>
-                {
-                    b.Navigation("MovieGenres");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Movie", b =>
-                {
-                    b.Navigation("Favorites");
-
-                    b.Navigation("MovieCasts");
-
-                    b.Navigation("MovieCrews");
-
-                    b.Navigation("MovieGenres");
-
-                    b.Navigation("Purchases");
-
-                    b.Navigation("Reviews");
-
-                    b.Navigation("Trailers");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Role", b =>
-                {
-                    b.Navigation("UserRoles");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
-                {
-                    b.Navigation("Favorites");
-
-                    b.Navigation("Purchases");
-
-                    b.Navigation("Reviews");
-
-                    b.Navigation("UserRoles");
-                });
-#pragma warning restore 612, 618
-        }
-    }
-}
Index: Infrastructure/Migrations/20210609214456_init.cs
===================================================================
diff --git a/Infrastructure/Migrations/20210609214456_init.cs b/Infrastructure/Migrations/20210609214456_init.cs
deleted file mode 100644
--- a/Infrastructure/Migrations/20210609214456_init.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ /dev/null	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
@@ -1,418 +0,0 @@
-using System;
-using Microsoft.EntityFrameworkCore.Migrations;
-
-namespace Infrastructure.Migrations
-{
-    public partial class init : Migration
-    {
-        protected override void Up(MigrationBuilder migrationBuilder)
-        {
-            migrationBuilder.CreateTable(
-                name: "Cast",
-                columns: table => new
-                {
-                    Id = table.Column<int>(type: "int", nullable: false)
-                        .Annotation("SqlServer:Identity", "1, 1"),
-                    Name = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
-                    Gender = table.Column<string>(type: "nvarchar(max)", nullable: true),
-                    TmdbUrl = table.Column<string>(type: "nvarchar(max)", nullable: true),
-                    ProfilePath = table.Column<string>(type: "nvarchar(2084)", maxLength: 2084, nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Cast", x => x.Id);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Crew",
-                columns: table => new
-                {
-                    Id = table.Column<int>(type: "int", nullable: false)
-                        .Annotation("SqlServer:Identity", "1, 1"),
-                    Name = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
-                    Gender = table.Column<string>(type: "nvarchar(max)", nullable: true),
-                    TmdbUrl = table.Column<string>(type: "nvarchar(max)", nullable: true),
-                    ProfilePath = table.Column<string>(type: "nvarchar(2084)", maxLength: 2084, nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Crew", x => x.Id);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Genre",
-                columns: table => new
-                {
-                    Id = table.Column<int>(type: "int", nullable: false)
-                        .Annotation("SqlServer:Identity", "1, 1"),
-                    Name = table.Column<string>(type: "nvarchar(64)", maxLength: 64, nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Genre", x => x.Id);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Movie",
-                columns: table => new
-                {
-                    Id = table.Column<int>(type: "int", nullable: false)
-                        .Annotation("SqlServer:Identity", "1, 1"),
-                    Title = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
-                    Overview = table.Column<string>(type: "nvarchar(max)", nullable: true),
-                    Tagline = table.Column<string>(type: "nvarchar(512)", maxLength: 512, nullable: true),
-                    Budget = table.Column<decimal>(type: "decimal(18,2)", nullable: true, defaultValue: 9.9m),
-                    Revenue = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
-                    ImdbUrl = table.Column<string>(type: "nvarchar(2084)", maxLength: 2084, nullable: true),
-                    TmdbUrl = table.Column<string>(type: "nvarchar(2084)", maxLength: 2084, nullable: true),
-                    PosterUrl = table.Column<string>(type: "nvarchar(2084)", maxLength: 2084, nullable: true),
-                    BackdropUrl = table.Column<string>(type: "nvarchar(2084)", maxLength: 2084, nullable: true),
-                    OriginalLanguage = table.Column<string>(type: "nvarchar(64)", maxLength: 64, nullable: true),
-                    ReleaseDate = table.Column<DateTime>(type: "datetime2(7)", nullable: true),
-                    RunTime = table.Column<int>(type: "int", nullable: true),
-                    Price = table.Column<decimal>(type: "decimal(5,2)", nullable: true, defaultValue: 9.9m),
-                    CreatedDate = table.Column<DateTime>(type: "datetime2", nullable: true),
-                    UpdatedDate = table.Column<DateTime>(type: "datetime2", nullable: true),
-                    UpdatedBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
-                    CreatedBy = table.Column<string>(type: "nvarchar(max)", nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Movie", x => x.Id);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Role",
-                columns: table => new
-                {
-                    Id = table.Column<int>(type: "int", nullable: false)
-                        .Annotation("SqlServer:Identity", "1, 1"),
-                    Name = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Role", x => x.Id);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "User",
-                columns: table => new
-                {
-                    Id = table.Column<int>(type: "int", nullable: false)
-                        .Annotation("SqlServer:Identity", "1, 1"),
-                    FirstName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
-                    LastName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
-                    DateOfBirth = table.Column<DateTime>(type: "datetime2", nullable: true),
-                    Email = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
-                    HashedPassword = table.Column<string>(type: "nvarchar(1024)", maxLength: 1024, nullable: true),
-                    Salt = table.Column<string>(type: "nvarchar(1024)", maxLength: 1024, nullable: true),
-                    PhoneNumber = table.Column<string>(type: "nvarchar(16)", maxLength: 16, nullable: true),
-                    TwoFactorEnabled = table.Column<bool>(type: "bit", nullable: true),
-                    LockoutEndDate = table.Column<DateTime>(type: "datetime2", nullable: true),
-                    LastLoginDateTime = table.Column<DateTime>(type: "datetime2", nullable: true),
-                    IsLocked = table.Column<bool>(type: "bit", nullable: true),
-                    AccessFailedCount = table.Column<int>(type: "int", nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_User", x => x.Id);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "MovieCast",
-                columns: table => new
-                {
-                    MovieId = table.Column<int>(type: "int", nullable: false),
-                    CastId = table.Column<int>(type: "int", nullable: false),
-                    Character = table.Column<string>(type: "nvarchar(450)", maxLength: 450, nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_MovieCast", x => new { x.MovieId, x.CastId });
-                    table.ForeignKey(
-                        name: "FK_MovieCast_Cast_CastId",
-                        column: x => x.CastId,
-                        principalTable: "Cast",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                    table.ForeignKey(
-                        name: "FK_MovieCast_Movie_MovieId",
-                        column: x => x.MovieId,
-                        principalTable: "Movie",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "MovieCrew",
-                columns: table => new
-                {
-                    MovieId = table.Column<int>(type: "int", nullable: false),
-                    CrewId = table.Column<int>(type: "int", nullable: false),
-                    Department = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
-                    Job = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_MovieCrew", x => new { x.MovieId, x.CrewId });
-                    table.ForeignKey(
-                        name: "FK_MovieCrew_Crew_CrewId",
-                        column: x => x.CrewId,
-                        principalTable: "Crew",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                    table.ForeignKey(
-                        name: "FK_MovieCrew_Movie_MovieId",
-                        column: x => x.MovieId,
-                        principalTable: "Movie",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "MovieGenre",
-                columns: table => new
-                {
-                    MovieId = table.Column<int>(type: "int", nullable: false),
-                    GenreId = table.Column<int>(type: "int", nullable: false)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_MovieGenre", x => new { x.MovieId, x.GenreId });
-                    table.ForeignKey(
-                        name: "FK_MovieGenre_Genre_GenreId",
-                        column: x => x.GenreId,
-                        principalTable: "Genre",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                    table.ForeignKey(
-                        name: "FK_MovieGenre_Movie_MovieId",
-                        column: x => x.MovieId,
-                        principalTable: "Movie",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Trailer",
-                columns: table => new
-                {
-                    Id = table.Column<int>(type: "int", nullable: false)
-                        .Annotation("SqlServer:Identity", "1, 1"),
-                    TrailerUrl = table.Column<string>(type: "nvarchar(max)", nullable: true),
-                    Name = table.Column<string>(type: "nvarchar(max)", nullable: true),
-                    MovieId = table.Column<int>(type: "int", nullable: false)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Trailer", x => x.Id);
-                    table.ForeignKey(
-                        name: "FK_Trailer_Movie_MovieId",
-                        column: x => x.MovieId,
-                        principalTable: "Movie",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Favorite",
-                columns: table => new
-                {
-                    Id = table.Column<int>(type: "int", nullable: false)
-                        .Annotation("SqlServer:Identity", "1, 1"),
-                    MovieId = table.Column<int>(type: "int", nullable: false),
-                    UserId = table.Column<int>(type: "int", nullable: false)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Favorite", x => x.Id);
-                    table.ForeignKey(
-                        name: "FK_Favorite_Movie_MovieId",
-                        column: x => x.MovieId,
-                        principalTable: "Movie",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                    table.ForeignKey(
-                        name: "FK_Favorite_User_UserId",
-                        column: x => x.UserId,
-                        principalTable: "User",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Purchase",
-                columns: table => new
-                {
-                    Id = table.Column<int>(type: "int", nullable: false)
-                        .Annotation("SqlServer:Identity", "1, 1"),
-                    UserId = table.Column<int>(type: "int", nullable: false),
-                    PurchaseNumber = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
-                    TotalPrice = table.Column<decimal>(type: "decimal(18,2)", nullable: false),
-                    PurchaseDateTime = table.Column<DateTime>(type: "datetime2", nullable: false),
-                    MovieId = table.Column<int>(type: "int", nullable: false)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Purchase", x => x.Id);
-                    table.ForeignKey(
-                        name: "FK_Purchase_Movie_MovieId",
-                        column: x => x.MovieId,
-                        principalTable: "Movie",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                    table.ForeignKey(
-                        name: "FK_Purchase_User_UserId",
-                        column: x => x.UserId,
-                        principalTable: "User",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Review",
-                columns: table => new
-                {
-                    MovieId = table.Column<int>(type: "int", nullable: false),
-                    UserId = table.Column<int>(type: "int", nullable: false),
-                    Rating = table.Column<decimal>(type: "decimal(3,2)", nullable: false, defaultValue: 3m),
-                    ReviewText = table.Column<string>(type: "nvarchar(max)", nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Review", x => new { x.MovieId, x.UserId });
-                    table.ForeignKey(
-                        name: "FK_Review_Movie_MovieId",
-                        column: x => x.MovieId,
-                        principalTable: "Movie",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                    table.ForeignKey(
-                        name: "FK_Review_User_UserId",
-                        column: x => x.UserId,
-                        principalTable: "User",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "UserRole",
-                columns: table => new
-                {
-                    UserId = table.Column<int>(type: "int", nullable: false),
-                    RoleId = table.Column<int>(type: "int", nullable: false)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_UserRole", x => new { x.UserId, x.RoleId });
-                    table.ForeignKey(
-                        name: "FK_UserRole_Role_RoleId",
-                        column: x => x.RoleId,
-                        principalTable: "Role",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                    table.ForeignKey(
-                        name: "FK_UserRole_User_UserId",
-                        column: x => x.UserId,
-                        principalTable: "User",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Favorite_MovieId",
-                table: "Favorite",
-                column: "MovieId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Favorite_UserId",
-                table: "Favorite",
-                column: "UserId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_MovieCast_CastId",
-                table: "MovieCast",
-                column: "CastId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_MovieCrew_CrewId",
-                table: "MovieCrew",
-                column: "CrewId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_MovieGenre_GenreId",
-                table: "MovieGenre",
-                column: "GenreId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Purchase_MovieId",
-                table: "Purchase",
-                column: "MovieId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Purchase_UserId",
-                table: "Purchase",
-                column: "UserId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Review_UserId",
-                table: "Review",
-                column: "UserId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Trailer_MovieId",
-                table: "Trailer",
-                column: "MovieId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_UserRole_RoleId",
-                table: "UserRole",
-                column: "RoleId");
-        }
-
-        protected override void Down(MigrationBuilder migrationBuilder)
-        {
-            migrationBuilder.DropTable(
-                name: "Favorite");
-
-            migrationBuilder.DropTable(
-                name: "MovieCast");
-
-            migrationBuilder.DropTable(
-                name: "MovieCrew");
-
-            migrationBuilder.DropTable(
-                name: "MovieGenre");
-
-            migrationBuilder.DropTable(
-                name: "Purchase");
-
-            migrationBuilder.DropTable(
-                name: "Review");
-
-            migrationBuilder.DropTable(
-                name: "Trailer");
-
-            migrationBuilder.DropTable(
-                name: "UserRole");
-
-            migrationBuilder.DropTable(
-                name: "Cast");
-
-            migrationBuilder.DropTable(
-                name: "Crew");
-
-            migrationBuilder.DropTable(
-                name: "Genre");
-
-            migrationBuilder.DropTable(
-                name: "Movie");
-
-            migrationBuilder.DropTable(
-                name: "Role");
-
-            migrationBuilder.DropTable(
-                name: "User");
-        }
-    }
-}
Index: Infrastructure/Migrations/20210613090618_initByDell.Designer.cs
===================================================================
diff --git a/Infrastructure/Migrations/20210613090618_initByDell.Designer.cs b/Infrastructure/Migrations/20210613090618_initByDell.Designer.cs
deleted file mode 100644
--- a/Infrastructure/Migrations/20210613090618_initByDell.Designer.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ /dev/null	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
@@ -1,602 +0,0 @@
-// <auto-generated />
-using System;
-using Infrastructure;
-using Microsoft.EntityFrameworkCore;
-using Microsoft.EntityFrameworkCore.Infrastructure;
-using Microsoft.EntityFrameworkCore.Metadata;
-using Microsoft.EntityFrameworkCore.Migrations;
-using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
-
-namespace Infrastructure.Migrations
-{
-    [DbContext(typeof(MovieShopDbContext))]
-    [Migration("20210613090618_initByDell")]
-    partial class initByDell
-    {
-        protected override void BuildTargetModel(ModelBuilder modelBuilder)
-        {
-#pragma warning disable 612, 618
-            modelBuilder
-                .HasAnnotation("Relational:MaxIdentifierLength", 128)
-                .HasAnnotation("ProductVersion", "5.0.7")
-                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-            modelBuilder.Entity("ApplicationCore.Entities.Cast", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Gender")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("ProfilePath")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("TmdbUrl")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Cast");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Crew", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Gender")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("ProfilePath")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("TmdbUrl")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Crew");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Favorite", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("MovieId");
-
-                    b.HasIndex("UserId");
-
-                    b.ToTable("Favorite");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Genre", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(64)
-                        .HasColumnType("nvarchar(64)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Genre");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Movie", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("BackdropUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<decimal?>("Budget")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("decimal(18,2)")
-                        .HasDefaultValue(9.9m);
-
-                    b.Property<string>("CreatedBy")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<DateTime?>("CreatedDate")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("ImdbUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("OriginalLanguage")
-                        .HasMaxLength(64)
-                        .HasColumnType("nvarchar(64)");
-
-                    b.Property<string>("Overview")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("PosterUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<decimal?>("Price")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("decimal(5,2)")
-                        .HasDefaultValue(9.9m);
-
-                    b.Property<DateTime?>("ReleaseDate")
-                        .HasColumnType("datetime2(7)");
-
-                    b.Property<decimal?>("Revenue")
-                        .HasColumnType("decimal(18,2)");
-
-                    b.Property<int?>("RunTime")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Tagline")
-                        .HasMaxLength(512)
-                        .HasColumnType("nvarchar(512)");
-
-                    b.Property<string>("Title")
-                        .HasMaxLength(256)
-                        .HasColumnType("nvarchar(256)");
-
-                    b.Property<string>("TmdbUrl")
-                        .HasMaxLength(2084)
-                        .HasColumnType("nvarchar(2084)");
-
-                    b.Property<string>("UpdatedBy")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<DateTime?>("UpdatedDate")
-                        .HasColumnType("datetime2");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCast", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("CastId")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Character")
-                        .HasMaxLength(450)
-                        .HasColumnType("nvarchar(450)");
-
-                    b.HasKey("MovieId", "CastId");
-
-                    b.HasIndex("CastId");
-
-                    b.ToTable("MovieCast");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCrew", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("CrewId")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Department")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("Job")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.HasKey("MovieId", "CrewId");
-
-                    b.HasIndex("CrewId");
-
-                    b.ToTable("MovieCrew");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieGenre", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("GenreId")
-                        .HasColumnType("int");
-
-                    b.HasKey("MovieId", "GenreId");
-
-                    b.HasIndex("GenreId");
-
-                    b.ToTable("MovieGenre");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Purchase", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<DateTime>("PurchaseDateTime")
-                        .HasColumnType("datetime2");
-
-                    b.Property<Guid>("PurchaseNumber")
-                        .HasColumnType("uniqueidentifier");
-
-                    b.Property<decimal>("TotalPrice")
-                        .HasColumnType("decimal(18,2)")
-                        .HasColumnName("TotalPrice");
-
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("MovieId");
-
-                    b.HasIndex("UserId");
-
-                    b.ToTable("Purchase");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Review", b =>
-                {
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.Property<decimal>("Rating")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("decimal(3,2)")
-                        .HasDefaultValue(3m);
-
-                    b.Property<string>("ReviewText")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("MovieId", "UserId");
-
-                    b.HasIndex("UserId");
-
-                    b.ToTable("Review");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Role", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<string>("Name")
-                        .HasMaxLength(20)
-                        .HasColumnType("nvarchar(20)");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Role");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Trailer", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int>("MovieId")
-                        .HasColumnType("int");
-
-                    b.Property<string>("Name")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.Property<string>("TrailerUrl")
-                        .HasColumnType("nvarchar(max)");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("MovieId");
-
-                    b.ToTable("Trailer");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("int")
-                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
-
-                    b.Property<int?>("AccessFailedCount")
-                        .HasColumnType("int");
-
-                    b.Property<DateTime?>("DateOfBirth")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("Email")
-                        .HasMaxLength(256)
-                        .HasColumnType("nvarchar(256)");
-
-                    b.Property<string>("FirstName")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<string>("HashedPassword")
-                        .HasMaxLength(1024)
-                        .HasColumnType("nvarchar(1024)");
-
-                    b.Property<bool?>("IsLocked")
-                        .HasColumnType("bit");
-
-                    b.Property<DateTime?>("LastLoginDateTime")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("LastName")
-                        .HasMaxLength(128)
-                        .HasColumnType("nvarchar(128)");
-
-                    b.Property<DateTime?>("LockoutEndDate")
-                        .HasColumnType("datetime2");
-
-                    b.Property<string>("PhoneNumber")
-                        .HasMaxLength(16)
-                        .HasColumnType("nvarchar(16)");
-
-                    b.Property<string>("Salt")
-                        .HasMaxLength(1024)
-                        .HasColumnType("nvarchar(1024)");
-
-                    b.Property<bool?>("TwoFactorEnabled")
-                        .HasColumnType("bit");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.UserRole", b =>
-                {
-                    b.Property<int>("UserId")
-                        .HasColumnType("int");
-
-                    b.Property<int>("RoleId")
-                        .HasColumnType("int");
-
-                    b.HasKey("UserId", "RoleId");
-
-                    b.HasIndex("RoleId");
-
-                    b.ToTable("UserRole");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Favorite", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Favorites")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("Favorites")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCast", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Cast", "Cast")
-                        .WithMany("MovieCasts")
-                        .HasForeignKey("CastId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("MovieCasts")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Cast");
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieCrew", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Crew", "Crew")
-                        .WithMany("MovieCrews")
-                        .HasForeignKey("CrewId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("MovieCrews")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Crew");
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.MovieGenre", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Genre", "Genre")
-                        .WithMany("MovieGenres")
-                        .HasForeignKey("GenreId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("MovieGenres")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Genre");
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Purchase", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Purchases")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("Purchases")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Review", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Reviews")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("Reviews")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Trailer", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Movie", "Movie")
-                        .WithMany("Trailers")
-                        .HasForeignKey("MovieId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Movie");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.UserRole", b =>
-                {
-                    b.HasOne("ApplicationCore.Entities.Role", "Role")
-                        .WithMany("UserRoles")
-                        .HasForeignKey("RoleId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("ApplicationCore.Entities.User", "User")
-                        .WithMany("UserRoles")
-                        .HasForeignKey("UserId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.Navigation("Role");
-
-                    b.Navigation("User");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Cast", b =>
-                {
-                    b.Navigation("MovieCasts");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Crew", b =>
-                {
-                    b.Navigation("MovieCrews");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Genre", b =>
-                {
-                    b.Navigation("MovieGenres");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Movie", b =>
-                {
-                    b.Navigation("Favorites");
-
-                    b.Navigation("MovieCasts");
-
-                    b.Navigation("MovieCrews");
-
-                    b.Navigation("MovieGenres");
-
-                    b.Navigation("Purchases");
-
-                    b.Navigation("Reviews");
-
-                    b.Navigation("Trailers");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.Role", b =>
-                {
-                    b.Navigation("UserRoles");
-                });
-
-            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
-                {
-                    b.Navigation("Favorites");
-
-                    b.Navigation("Purchases");
-
-                    b.Navigation("Reviews");
-
-                    b.Navigation("UserRoles");
-                });
-#pragma warning restore 612, 618
-        }
-    }
-}
Index: Infrastructure/Migrations/20210613090618_initByDell.cs
===================================================================
diff --git a/Infrastructure/Migrations/20210613090618_initByDell.cs b/Infrastructure/Migrations/20210613090618_initByDell.cs
deleted file mode 100644
--- a/Infrastructure/Migrations/20210613090618_initByDell.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ /dev/null	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
@@ -1,17 +0,0 @@
-using Microsoft.EntityFrameworkCore.Migrations;
-
-namespace Infrastructure.Migrations
-{
-    public partial class initByDell : Migration
-    {
-        protected override void Up(MigrationBuilder migrationBuilder)
-        {
-
-        }
-
-        protected override void Down(MigrationBuilder migrationBuilder)
-        {
-
-        }
-    }
-}
Index: .idea/.idea.MovieShopApp/.idea/indexLayout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.MovieShopApp/.idea/indexLayout.xml b/.idea/.idea.MovieShopApp/.idea/indexLayout.xml
new file mode 100644
--- /dev/null	(date 1623778404250)
+++ b/.idea/.idea.MovieShopApp/.idea/indexLayout.xml	(date 1623778404250)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="UserContentModel">
+    <attachedFolders />
+    <explicitIncludes />
+    <explicitExcludes />
+  </component>
+</project>
\ No newline at end of file
Index: ApplicationCore/ApplicationCore.csproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <OutputType>Library</OutputType>\n    <TargetFramework>net5.0</TargetFramework>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"5.0.7\">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Relational\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"5.0.7\">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"5.0.2\" />\n  </ItemGroup>\n\n</Project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ApplicationCore/ApplicationCore.csproj b/ApplicationCore/ApplicationCore.csproj
--- a/ApplicationCore/ApplicationCore.csproj	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/ApplicationCore/ApplicationCore.csproj	(date 1623780221855)
@@ -6,6 +6,7 @@
   </PropertyGroup>
 
   <ItemGroup>
+    <PackageReference Include="EntityFramework" Version="6.4.4" />
     <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="5.0.7" />
     <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.7" />
     <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="5.0.7">
Index: .idea/.idea.MovieShopApp/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.MovieShopApp/.idea/vcs.xml b/.idea/.idea.MovieShopApp/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1623778404293)
+++ b/.idea/.idea.MovieShopApp/.idea/vcs.xml	(date 1623778404293)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: Infrastructure/Repositories/AdminRepository.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing ApplicationCore.Entities;\nusing ApplicationCore.RepositoryInterfaces;\nnamespace Infrastructure.Repositories\n{\n    public class AdminRepository:IAdminRepository\n    {\n        protected readonly MovieShopDbContext _dbContext;\n\n        public AdminRepository(MovieShopDbContext movieShopDbContext)\n        {\n            _dbContext = movieShopDbContext;\n        }\n\n        public async Task<int> AddMovieGenres(Movie movie, IEnumerable<Genre> genres)\n        {\n            List<MovieGenre> movieGenres = new List<MovieGenre>();\n            foreach (var item in genres)\n            {\n                movieGenres.Add(new MovieGenre\n                {\n                    Movie = movie,\n                    Genre = item\n                });\n\n            }\n            await _dbContext.Set<MovieGenre>().AddRangeAsync(movieGenres);\n            \n            return await _dbContext.SaveChangesAsync();\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Infrastructure/Repositories/AdminRepository.cs b/Infrastructure/Repositories/AdminRepository.cs
--- a/Infrastructure/Repositories/AdminRepository.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/Infrastructure/Repositories/AdminRepository.cs	(date 1623786477299)
@@ -4,6 +4,7 @@
 using System.Text;
 using System.Threading.Tasks;
 using ApplicationCore.Entities;
+using Infrastructure.DataContext;
 using ApplicationCore.RepositoryInterfaces;
 namespace Infrastructure.Repositories
 {
Index: Infrastructure/Repositories/GenreRepository.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing ApplicationCore.Entities;\nusing System.Linq;\nusing ApplicationCore.RepositoryInterfaces;\nusing System.Threading.Tasks;\nusing Microsoft.EntityFrameworkCore;\nusing ApplicationCore.Models.Response;\nnamespace Infrastructure.Repositories\n{\n    public class GenreRepository : EfRepository<Genre>,IGenreRepository\n    {\n        public GenreRepository(MovieShopDbContext dbcontext) : base(dbcontext)\n        {\n\n        }\n\n        public async Task<IEnumerable<Genre>> GetGenresByMovie(int movieId)\n        {\n            \n            var genres = await _dbContext.Set<MovieGenre>().Where(m => m.MovieId == movieId).Include(c => c.Genre).Select(c=>c.Genre).ToListAsync();\n\n\n            return genres;\n            \n        }\n\n       \n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Infrastructure/Repositories/GenreRepository.cs b/Infrastructure/Repositories/GenreRepository.cs
--- a/Infrastructure/Repositories/GenreRepository.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/Infrastructure/Repositories/GenreRepository.cs	(date 1623786477311)
@@ -7,6 +7,7 @@
 using System.Threading.Tasks;
 using Microsoft.EntityFrameworkCore;
 using ApplicationCore.Models.Response;
+using Infrastructure.DataContext;
 namespace Infrastructure.Repositories
 {
     public class GenreRepository : EfRepository<Genre>,IGenreRepository
Index: Infrastructure/Repositories/PurchaseRepository.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing ApplicationCore.Entities;\nusing ApplicationCore.RepositoryInterfaces;\n \nusing Microsoft.EntityFrameworkCore;\n\nnamespace Infrastructure.Repositories\n{\n    public class PurchaseRepository : EfRepository<Purchase>, IPurchaseRepository\n    {\n        public PurchaseRepository(MovieShopDbContext dbContext) : base(dbContext)\n        {\n        }\n\n        public async Task<IEnumerable<Purchase>> GetAllPurchases(int userId)\n        {\n            var purchases = await _dbContext.Purchase.Include(m => m.Movie).Where(m=>m.UserId== userId)\n                .ToListAsync();\n            return purchases;\n        }\n   \n\n        public async Task<IEnumerable<Purchase>> GetAllPurchasesByMovie(int movieId, int pageSize = 30,\n            int pageIndex = 1)\n        {\n            var purchases = await _dbContext.Purchase.Where(p => p.MovieId == movieId).Include(m => m.Movie)\n                //.Include(m => m.Customer)\n                .OrderByDescending(p => p.PurchaseDateTime)\n                .Skip((pageIndex - 1) * pageSize).Take(pageSize).ToListAsync();\n            return purchases;\n        }\n\n        public int GetPurchasedMoviesCountByUser(int id)\n        {\n            var count =  _dbContext.Set<Purchase>().Include(m => m.Movie).Include(m => m.User).Where(m=>m.UserId==id).Count();\n            return count;\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Infrastructure/Repositories/PurchaseRepository.cs b/Infrastructure/Repositories/PurchaseRepository.cs
--- a/Infrastructure/Repositories/PurchaseRepository.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/Infrastructure/Repositories/PurchaseRepository.cs	(date 1623786477309)
@@ -5,7 +5,7 @@
 using ApplicationCore.RepositoryInterfaces;
  
 using Microsoft.EntityFrameworkCore;
-
+using Infrastructure.DataContext;
 namespace Infrastructure.Repositories
 {
     public class PurchaseRepository : EfRepository<Purchase>, IPurchaseRepository
Index: Infrastructure/Repositories/CastRepository.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing ApplicationCore.Entities;\nusing System.Linq;\nusing ApplicationCore.RepositoryInterfaces;\nusing System.Threading.Tasks;\nusing Microsoft.EntityFrameworkCore;\n\nnamespace Infrastructure.Repositories\n{\n    public class CastRepository : EfRepository<Cast>, ICastRepository\n    {\n        public CastRepository(MovieShopDbContext dbcontext) : base(dbcontext)\n        {\n\n        }\n\n        public async Task<IEnumerable<Cast>> GetCastsByMovie(int movieId)\n        {\n            var casts = await _dbContext.Set<MovieCast>().Where(m => m.MovieId == movieId).Include(c => c.Cast).Include(c => c.Movie).Select(c => new Cast { Id=c.Cast.Id,Character=c.Character,Name=c.Cast.Name,ProfilePath=c.Cast.ProfilePath }).ToListAsync();\n           \n            \n            return casts;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Infrastructure/Repositories/CastRepository.cs b/Infrastructure/Repositories/CastRepository.cs
--- a/Infrastructure/Repositories/CastRepository.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/Infrastructure/Repositories/CastRepository.cs	(date 1623786453103)
@@ -6,7 +6,7 @@
 using ApplicationCore.RepositoryInterfaces;
 using System.Threading.Tasks;
 using Microsoft.EntityFrameworkCore;
-
+using Infrastructure.DataContext;
 namespace Infrastructure.Repositories
 {
     public class CastRepository : EfRepository<Cast>, ICastRepository
Index: Infrastructure/Repositories/ReviewRepository.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing ApplicationCore.Entities;\nusing System.Linq;\nusing ApplicationCore.RepositoryInterfaces;\nusing System.Threading.Tasks;\nusing Microsoft.EntityFrameworkCore;\n\nnamespace Infrastructure.Repositories\n{\n    public class ReviewRepository : EfRepository<Review>, IReviewRepository\n    {\n        public ReviewRepository(MovieShopDbContext dbcontext) : base(dbcontext)\n        {\n\n        }\n\n        public async Task<IEnumerable<Review>> GetReviewsByMovie(int movieId)\n        {\n            \n            var reviews = await _dbContext.Set<Review>().Where(m => m.MovieId == movieId).ToListAsync();\n\n\n            return reviews;\n            \n        }\n\n        public async Task<decimal> GetAvgReviewRatingByMovie(int movieId)\n        {\n            var reviews = await GetReviewsByMovie(movieId);\n            var rating = reviews.Average(m => m.Rating);\n            return rating;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Infrastructure/Repositories/ReviewRepository.cs b/Infrastructure/Repositories/ReviewRepository.cs
--- a/Infrastructure/Repositories/ReviewRepository.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/Infrastructure/Repositories/ReviewRepository.cs	(date 1623786477307)
@@ -6,7 +6,7 @@
 using ApplicationCore.RepositoryInterfaces;
 using System.Threading.Tasks;
 using Microsoft.EntityFrameworkCore;
-
+using Infrastructure.DataContext;
 namespace Infrastructure.Repositories
 {
     public class ReviewRepository : EfRepository<Review>, IReviewRepository
Index: Infrastructure/Repositories/EfRepository.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Linq.Expressions;\nusing System.Text;\nusing ApplicationCore.RepositoryInterfaces;\nusing System.Threading.Tasks;\nusing Microsoft.EntityFrameworkCore;\n\nnamespace Infrastructure.Repositories\n{\n    public class EfRepository<T> : IAsyncRepository<T> where T : class\n    {\n        protected readonly MovieShopDbContext _dbContext;\n\n        public EfRepository(MovieShopDbContext dbContext)\n        {\n            dbContext.Database.SetCommandTimeout(300); \n            _dbContext = dbContext;\n        }\n\n        public virtual async Task<T> AddAsync(T entity)\n        {\n            _dbContext.Set<T>().Add(entity);\n            await _dbContext.SaveChangesAsync();\n            return  entity;\n        }\n\n        public virtual async Task<T> UpdateAsync(T entity)\n        {\n            _dbContext.Entry(entity).State = EntityState.Modified;\n            await _dbContext.SaveChangesAsync();\n            return entity;\n        }\n        public async Task<IEnumerable<T>> ListAllWithIncludesAsync(Expression<Func<T, bool>> @where,\n          params Expression<Func<T, object>>[] includes)\n        {\n            var query = _dbContext.Set<T>().AsQueryable();\n\n            if (includes != null)\n                foreach (Expression<Func<T, object>> navigationProperty in includes)\n                    query = query.Include(navigationProperty);\n\n            return await query.Where(@where).ToListAsync();\n        }\n        public virtual async Task DeleteAsync(T entity)\n        {\n            _dbContext.Set<T>().Remove(entity);\n            await _dbContext.SaveChangesAsync();\n        }\n\n        public virtual async Task<T> GetById(int id)\n        {\n            var entity = await _dbContext.Set<T>().FindAsync(id);\n            return entity;\n        }\n\n        public virtual async Task<T> GetByIdAsync(int id)\n        {\n            return await _dbContext.Set<T>().FindAsync(id);\n        }\n\n        public async Task<IEnumerable<T>> ListAllAsync()\n        {\n            return await _dbContext.Set<T>().ToListAsync();\n        }\n\n        public async Task<IEnumerable<T>> ListAsync(Expression<Func<T, bool>> filter)\n        {\n            return await _dbContext.Set<T>().Where(filter).ToListAsync();\n        }\n\n        public async Task<int> GetCountAsync(Expression<Func<T, bool>> filter)\n        {\n            if (filter != null)\n                return await _dbContext.Set<T>().Where(filter).CountAsync();\n            return await _dbContext.Set<T>().CountAsync();\n        }\n\n        public async Task<bool> GetExistsAsync(Expression<Func<T, bool>> filter)\n        {\n            if (filter == null) return false;\n            return await _dbContext.Set<T>().Where(filter).AnyAsync();\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Infrastructure/Repositories/EfRepository.cs b/Infrastructure/Repositories/EfRepository.cs
--- a/Infrastructure/Repositories/EfRepository.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/Infrastructure/Repositories/EfRepository.cs	(date 1623786477303)
@@ -6,7 +6,7 @@
 using ApplicationCore.RepositoryInterfaces;
 using System.Threading.Tasks;
 using Microsoft.EntityFrameworkCore;
-
+using Infrastructure.DataContext;
 namespace Infrastructure.Repositories
 {
     public class EfRepository<T> : IAsyncRepository<T> where T : class
Index: .idea/.idea.MovieShopApp/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.MovieShopApp/.idea/.gitignore b/.idea/.idea.MovieShopApp/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1623778424289)
+++ b/.idea/.idea.MovieShopApp/.idea/.gitignore	(date 1623778424289)
@@ -0,0 +1,13 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Rider ignored files
+/modules.xml
+/contentModel.xml
+/projectSettingsUpdater.xml
+/.idea.MovieShopApp.iml
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: Infrastructure/Repositories/UserRepository.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing ApplicationCore.Entities;\nusing ApplicationCore.RepositoryInterfaces;\nusing System.Linq;\nusing System.Linq.Expressions;\nusing Microsoft.EntityFrameworkCore;\nusing System.Threading.Tasks;\n\nnamespace Infrastructure.Repositories\n{\n    public class UserRepository : EfRepository<User>, IUserRepository\n    {\n        public UserRepository(MovieShopDbContext dbContext) : base(dbContext)\n        {\n        }\n\n        public async Task<User> GetUserByEmail(string email)\n        {\n            var user = await _dbContext.User.FirstOrDefaultAsync(u => u.Email == email);\n            return user;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Infrastructure/Repositories/UserRepository.cs b/Infrastructure/Repositories/UserRepository.cs
--- a/Infrastructure/Repositories/UserRepository.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/Infrastructure/Repositories/UserRepository.cs	(date 1623786477287)
@@ -7,7 +7,7 @@
 using System.Linq.Expressions;
 using Microsoft.EntityFrameworkCore;
 using System.Threading.Tasks;
-
+using Infrastructure.DataContext;
 namespace Infrastructure.Repositories
 {
     public class UserRepository : EfRepository<User>, IUserRepository
Index: MovieShopApp.sln
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\nMicrosoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 16\nVisualStudioVersion = 16.0.31229.75\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"ApplicationCore\", \"ApplicationCore\\ApplicationCore.csproj\", \"{D147C698-80C1-447B-9C94-0FB3A6D1BBAD}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Infrastructure\", \"Infrastructure\\Infrastructure.csproj\", \"{23420884-97DA-4294-ADCE-C0C69FD15D94}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"MovieShopApp.API\", \"MovieShopApp.API\\MovieShopApp.API.csproj\", \"{1E48DD39-1589-433B-B7B8-742669AB0BE4}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"MovieShopApp.MVC\", \"MovieShopApp.MVC\\MovieShopApp.MVC.csproj\", \"{1803BDDB-4BC1-4357-87C9-C5784B7B84E4}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{D147C698-80C1-447B-9C94-0FB3A6D1BBAD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D147C698-80C1-447B-9C94-0FB3A6D1BBAD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D147C698-80C1-447B-9C94-0FB3A6D1BBAD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D147C698-80C1-447B-9C94-0FB3A6D1BBAD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{23420884-97DA-4294-ADCE-C0C69FD15D94}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{23420884-97DA-4294-ADCE-C0C69FD15D94}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{23420884-97DA-4294-ADCE-C0C69FD15D94}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{23420884-97DA-4294-ADCE-C0C69FD15D94}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1E48DD39-1589-433B-B7B8-742669AB0BE4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1E48DD39-1589-433B-B7B8-742669AB0BE4}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1E48DD39-1589-433B-B7B8-742669AB0BE4}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1E48DD39-1589-433B-B7B8-742669AB0BE4}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{1803BDDB-4BC1-4357-87C9-C5784B7B84E4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{1803BDDB-4BC1-4357-87C9-C5784B7B84E4}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{1803BDDB-4BC1-4357-87C9-C5784B7B84E4}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{1803BDDB-4BC1-4357-87C9-C5784B7B84E4}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {A7CC9CA1-BF82-4D1B-ADA4-5D1F950E9085}\n\tEndGlobalSection\nEndGlobal\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MovieShopApp.sln b/MovieShopApp.sln
--- a/MovieShopApp.sln	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/MovieShopApp.sln	(date 1623787097121)
@@ -33,6 +33,7 @@
 		{1803BDDB-4BC1-4357-87C9-C5784B7B84E4}.Debug|Any CPU.Build.0 = Debug|Any CPU
 		{1803BDDB-4BC1-4357-87C9-C5784B7B84E4}.Release|Any CPU.ActiveCfg = Release|Any CPU
 		{1803BDDB-4BC1-4357-87C9-C5784B7B84E4}.Release|Any CPU.Build.0 = Release|Any CPU
+		{1803BDDB-4BC1-4357-87C9-C5784B7B84E4}.Debug|Any CPU.Deploy.0 = Debug|Any CPU
 	EndGlobalSection
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE
Index: Infrastructure/Repositories/MovieRepository.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing ApplicationCore.Entities;\nusing ApplicationCore.RepositoryInterfaces;\nusing System.Linq;\nusing System.Linq.Expressions;\nusing Microsoft.EntityFrameworkCore;\nusing System.Threading.Tasks;\n\nnamespace Infrastructure.Repositories\n{\n    public class MovieRepository : EfRepository<Movie>, IMovieRepository\n    {\n     \n        public MovieRepository(MovieShopDbContext dbcontext) : base(dbcontext)\n        {\n            \n        }\n\n        public async Task<IEnumerable<Movie>> GetHighestRevenueMovies()\n        {\n\n            return await _dbContext.Set<Movie>().OrderByDescending(m=>m.Revenue).Take(30).ToListAsync();\n        }\n\n        public Task<IEnumerable<Movie>> GetTopRatedMovies()\n        {\n            throw new NotImplementedException();\n        }\n\n        public async Task<Movie> GetMovieWithRelatedData(int id)\n        {\n            var movie = _dbContext.Movie\n                             .Include(m => m.Favorites)\n                             .Include(m => m.MovieCasts)\n                             .Where(m=>m.Id==id)\n                             .FirstOrDefaultAsync();\n            return await movie;\n        }\n\n\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Infrastructure/Repositories/MovieRepository.cs b/Infrastructure/Repositories/MovieRepository.cs
--- a/Infrastructure/Repositories/MovieRepository.cs	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/Infrastructure/Repositories/MovieRepository.cs	(date 1623786477313)
@@ -7,7 +7,7 @@
 using System.Linq.Expressions;
 using Microsoft.EntityFrameworkCore;
 using System.Threading.Tasks;
-
+using Infrastructure.DataContext;
 namespace Infrastructure.Repositories
 {
     public class MovieRepository : EfRepository<Movie>, IMovieRepository
Index: global.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/global.json b/global.json
new file mode 100644
--- /dev/null	(date 1623781060026)
+++ b/global.json	(date 1623781060026)
@@ -0,0 +1,7 @@
+{
+  "sdk": {
+    "version": "5.0",
+    "rollForward": "latestMajor",
+    "allowPrerelease": true
+  }
+}
\ No newline at end of file
Index: MovieShopApp.API/MovieShopApp.API.csproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Project Sdk=\"Microsoft.NET.Sdk.Web\">\n\n  <PropertyGroup>\n    <TargetFramework>net5.0</TargetFramework>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"AutoMapper.Extensions.Microsoft.DependencyInjection\" Version=\"8.1.1\" />\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"5.0.7\">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Relational\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"5.0.7\">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"5.0.2\" />\n    <PackageReference Include=\"Swashbuckle.AspNetCore.Swagger\" Version=\"6.1.4\" />\n    <PackageReference Include=\"Swashbuckle.AspNetCore.SwaggerGen\" Version=\"6.1.4\" />\n    <PackageReference Include=\"Swashbuckle.AspNetCore.SwaggerUI\" Version=\"6.1.4\" />\n  </ItemGroup>\n\n  <ItemGroup>\n    <ProjectReference Include=\"..\\ApplicationCore\\ApplicationCore.csproj\" />\n    <ProjectReference Include=\"..\\Infrastructure\\Infrastructure.csproj\" />\n  </ItemGroup>\n\n\n</Project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MovieShopApp.API/MovieShopApp.API.csproj b/MovieShopApp.API/MovieShopApp.API.csproj
--- a/MovieShopApp.API/MovieShopApp.API.csproj	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/MovieShopApp.API/MovieShopApp.API.csproj	(date 1623780222407)
@@ -6,6 +6,7 @@
 
   <ItemGroup>
     <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1" />
+    <PackageReference Include="EntityFramework" Version="6.4.4" />
     <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="5.0.7" />
     <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.7" />
     <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="5.0.7">
Index: MovieShopApp.MVC/MovieShopApp.MVC.csproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Project Sdk=\"Microsoft.NET.Sdk.Web\">\n\n  <PropertyGroup>\n    <TargetFramework>net5.0</TargetFramework>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <Content Remove=\"wwwroot\\img\\black-plus-icon-24.jpeg\" />\n  </ItemGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"AutoMapper.Extensions.Microsoft.DependencyInjection\" Version=\"8.1.1\" />\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"5.0.7\">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Relational\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"5.0.7\">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"5.0.2\" />\n    <PackageReference Include=\"Serilog\" Version=\"2.10.0\" />\n    <PackageReference Include=\"Serilog.AspNetCore\" Version=\"4.1.0\" />\n    <PackageReference Include=\"Serilog.Extensions.Logging\" Version=\"3.0.1\" />\n    <PackageReference Include=\"Serilog.Settings.Configuration\" Version=\"3.1.0\" />\n    <PackageReference Include=\"Serilog.Sinks.Console\" Version=\"3.1.1\" />\n    <PackageReference Include=\"Serilog.Sinks.File\" Version=\"4.1.0\" />\n  </ItemGroup>\n\n  <ItemGroup>\n    <ProjectReference Include=\"..\\ApplicationCore\\ApplicationCore.csproj\" />\n    <ProjectReference Include=\"..\\Infrastructure\\Infrastructure.csproj\" />\n  </ItemGroup>\n\n  <ItemGroup>\n    <Content Update=\"appsettings.Development.json\">\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\n      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>\n      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\n    </Content>\n    <Content Update=\"appsettings.json\">\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\n      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>\n      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\n    </Content>\n  </ItemGroup>\n\n  <ItemGroup>\n    <Folder Include=\"ApplicationData\\LogFiles\\\" />\n  </ItemGroup>\n\n</Project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MovieShopApp.MVC/MovieShopApp.MVC.csproj b/MovieShopApp.MVC/MovieShopApp.MVC.csproj
--- a/MovieShopApp.MVC/MovieShopApp.MVC.csproj	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/MovieShopApp.MVC/MovieShopApp.MVC.csproj	(date 1623789876369)
@@ -10,6 +10,7 @@
 
   <ItemGroup>
     <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1" />
+    <PackageReference Include="EntityFramework" Version="6.4.4" />
     <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="5.0.7" />
     <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.7" />
     <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="5.0.7">
Index: Infrastructure/Infrastructure.csproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <TargetFramework>net5.0</TargetFramework>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"AutoMapper\" Version=\"10.1.1\" />\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"5.0.7\">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Relational\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"5.0.7\" />\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"5.0.7\">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"5.0.2\" />\n  </ItemGroup>\n\t\n  <ItemGroup>\n    <ProjectReference Include=\"..\\ApplicationCore\\ApplicationCore.csproj\" />\n  </ItemGroup>\n\n</Project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Infrastructure/Infrastructure.csproj b/Infrastructure/Infrastructure.csproj
--- a/Infrastructure/Infrastructure.csproj	(revision 660c2ae92d5878e01cd97decafb6d9b79356be39)
+++ b/Infrastructure/Infrastructure.csproj	(date 1623781585931)
@@ -6,6 +6,7 @@
 
   <ItemGroup>
     <PackageReference Include="AutoMapper" Version="10.1.1" />
+    <PackageReference Include="EntityFramework" Version="6.4.4" />
     <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="5.0.7" />
     <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.7" />
     <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="5.0.7">
